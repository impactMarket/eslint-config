'use strict';

module.exports = {
    extends: [require.resolve('./base')],

    plugins: ['import', 'react', 'react-hooks', 'sort-class-members', 'sort-imports-es6-autofix', 'prettier'],

    settings: {
        'import/resolver': {
            typescript: {}, // this loads <rootdir>/tsconfig.json to eslint
        },
    },

    overrides: [
        {
            files: ['**/*.ts?(x)'],
            parser: '@typescript-eslint/parser',
            parserOptions: {
                ecmaVersion: 2018,
                sourceType: 'module',
                ecmaFeatures: {
                    jsx: true,
                },

                warnOnUnsupportedTypeScriptVersion: true,
            },
            plugins: ['@typescript-eslint'],
            rules: {
                'max-depth': 'error',
                'max-params': ['error', 4],
                'new-cap': 'error',
                'no-alert': 'error',
                'no-bitwise': 'error',
                'no-caller': 'error',
                'no-cond-assign': ['error', 'always'],
                'no-div-regex': 'error',
                'no-duplicate-imports': 'error',
                'no-else-return': 'error',
                'no-eq-null': 'error',
                'no-eval': 'error',
                'no-extend-native': 'error',
                'no-extra-bind': 'error',
                'no-implied-eval': 'error',
                'no-inline-comments': 'error',
                'no-iterator': 'error',
                'no-labels': 'error',
                'no-lone-blocks': 'error',
                'no-lonely-if': 'error',
                'no-loop-func': 'error',
                'no-mixed-requires': 'error',
                'no-multi-str': 'error',
                'no-nested-ternary': 'error',
                'no-new': 'error',
                'no-new-func': 'error',
                'no-new-object': 'error',
                'no-new-require': 'error',
                'no-new-wrappers': 'error',
                'no-octal-escape': 'error',
                'no-path-concat': 'error',
                'no-process-env': 'error',
                'no-process-exit': 'error',
                'no-proto': 'error',
                'no-restricted-modules': 'error',
                'no-return-assign': 'error',
                'no-script-url': 'error',
                'no-self-compare': 'error',
                'no-sequences': 'error',
                'no-sync': 'error',
                'no-tabs': ['error', { allowIndentationTabs: true }],
                'no-throw-literal': 'error',
                'no-undef-init': 'error',
                'no-underscore-dangle': 'error',
                'no-unneeded-ternary': 'error',
                'no-use-before-define': 'error',
                'no-useless-call': 'error',
                'no-useless-concat': 'error',
                'no-var': 'error',
                'no-void': 'error',
                'object-shorthand': 'error',
                'operator-assignment': 'error',
                'padding-line-between-statements': [
                    'error',
                    { blankLine: 'always', next: 'return', prev: '*' },
                    {
                        blankLine: 'always',
                        next: '*',
                        prev: ['const', 'let', 'var'],
                    },
                    {
                        blankLine: 'any',
                        next: ['const', 'let', 'var'],
                        prev: ['const', 'let', 'var'],
                    },
                ],
                'prefer-const': 'error',
                'prefer-destructuring': [
                    'error',
                    {
                        AssignmentExpression: { array: false, object: false },
                        VariableDeclarator: { array: true, object: true },
                    },
                    {
                        enforceForRenamedProperties: false,
                    },
                ],
                'prefer-spread': 'error',
                'prefer-template': 'error',
                'prettier/prettier': [
                    'error',
                    {
                        arrowParens: 'avoid',
                        printWidth: 120,
                        singleQuote: true,
                        trailingComma: 'none',
                    },
                ],
                radix: 'error',
                'require-atomic-updates': 'off',
                'require-await': 'error',
                'sort-imports-es6-autofix/sort-imports-es6': [
                    'error',
                    {
                        ignoreCase: false,
                        ignoreMemberSort: false,
                        memberSyntaxSortOrder: [
                            'none',
                            'all',
                            'multiple',
                            'single',
                        ],
                    },
                ],
                'sort-keys': ['error', 'asc', { natural: true }],
                'spaced-comment': 'error',
                'valid-jsdoc': 'error',
                'vars-on-top': 'error',
                'import/default': 'error',
                'import/named': 'error',
                'import/no-unresolved': 'off',
                'jsx-quotes': ['error', 'prefer-double'],
                'new-cap': ['error', { capIsNewExceptions: ['BigNumber'] }],
                'react/display-name': 'error',
                'react/jsx-boolean-value': 'error',
                'react/jsx-curly-brace-presence': [
                    'error',
                    {
                        props: 'never',
                    },
                ],
                'react/jsx-key': 'error',
                'react/jsx-no-duplicate-props': 'error',
                'react/jsx-no-undef': 'error',
                'react/jsx-sort-props': 'error',
                'react/jsx-uses-react': 'error',
                'react/jsx-uses-vars': 'error',
                'react/no-danger': 'error',
                'react/no-direct-mutation-state': 'error',
                'react/no-string-refs': 'error',
                'react/no-unknown-property': 'error',
                'react/prefer-es6-class': 'error',
                'react/prefer-stateless-function': 'error',
                'react/react-in-jsx-scope': 'error',
                'react/require-default-props': 'warn',
                'react/self-closing-comp': 'error',
                'react/sort-prop-types': 'error',
                'react-hooks/rules-of-hooks': 'error',
                /* eslint-disable sort-keys */
                'sort-class-members/sort-class-members': [
                    'error',
                    {
                        order: [
                            '[static-properties-alpha]',
                            '[static-methods-alpha]',
                            '[properties-alpha]',
                            '[constructor]',
                            '[methods-alpha]',
                        ],
                        groups: {
                            'static-properties-alpha': [
                                {
                                    type: 'property',
                                    static: true,
                                    sort: 'alphabetical',
                                },
                            ],
                            'static-methods-alpha': [
                                {
                                    type: 'method',
                                    static: true,
                                    sort: 'alphabetical',
                                },
                            ],
                            'properties-alpha': [
                                {
                                    type: 'property',
                                    propertyType: 'Literal',
                                    sort: 'alphabetical',
                                },
                            ],
                            'methods-alpha': [
                                { type: 'method', sort: 'alphabetical' },
                            ],
                        },
                    },
                ],
                /* eslint-enable sort-keys */
                'default-case': 'off',
                'no-dupe-class-members': 'off',
                'no-undef': 'off',
                '@typescript-eslint/consistent-type-assertions': 'warn',
                'no-array-constructor': 'off',
                '@typescript-eslint/no-array-constructor': 'warn',
                'no-redeclare': 'off',
                '@typescript-eslint/no-redeclare': 'warn',
                'no-use-before-define': 'off',
                '@typescript-eslint/no-use-before-define': [
                    'warn',
                    {
                        functions: false,
                        classes: false,
                        variables: false,
                        typedefs: false,
                    },
                ],
                'no-unused-expressions': 'off',
                '@typescript-eslint/no-unused-expressions': [
                    'error',
                    {
                        allowShortCircuit: true,
                        allowTernary: true,
                        allowTaggedTemplates: true,
                    },
                ],
                'no-unused-vars': 'off',
                '@typescript-eslint/no-unused-vars': [
                    'warn',
                    {
                        args: 'none',
                        ignoreRestSiblings: true,
                    },
                ],
                'no-useless-constructor': 'off',
                '@typescript-eslint/no-useless-constructor': 'warn',
            },
        },
    ],
};
